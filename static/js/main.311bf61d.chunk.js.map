{"version":3,"sources":["Components/Search.js","Components/Card.js","Components/Cards.js","Components/Preloader.js","App.js","Components/Forecast.js","Components/DetailCardContent.js","Components/DetailCard.js","Components/Router.js","index.js"],"names":["Search","requestWeather","useState","value","setValue","style","display","justifyContent","alignItems","className","marginLeft","id","type","placeholder","onChange","e","target","onKeyDown","key","name","onClick","Card","cityOne","deleteCity","temp","temperature","wind","desc","description","city","data-city","to","Cards","cities","map","ind","Date","now","Preloader","margin","App","setCities","loading","setLoading","updateLS","ls","JSON","parse","localStorage","getItem","citiesForLS","length","setItem","stringify","getOneCity","a","fetch","request","json","response","useEffect","fetchAllCities","arr","item","changedObj","push","names","updateCities","window","location","pathname","fetchData","href","rel","toUpperCase","slice","toLowerCase","then","ok","Promise","reject","data","includes","alert","newObject","prevCities","catch","error","status","statusText","document","querySelector","classList","add","setTimeout","filter","c","newCitiesLs","newCityNamesLs","Forecast","day","month","fontSize","textAlign","days","date","inDays","setDate","getDate","addDays","DetailCardContent","infoCity","nameCity","fontWeight","forecast","DetailCard","check","setInfoCity","propsCity","match","params","isThere","toLocaleString","Router","exact","path","component","render","props","ReactDOM","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.311bf61d.chunk.js","sourcesContent":["import React, { useState } from 'react'\r\n\r\nconst Search = ({ requestWeather }) => {\r\n    const [value, setValue] = useState('')\r\n\r\n    const handleKey = e => {\r\n        if (e.key === 'Enter') {\r\n            requestWeather(value, setValue)\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div style={{ display: 'flex', justifyContent: 'center', alignItems: 'center' }} className=\"row\">\r\n            <div style={{ marginLeft: '0' }} className=\"input-field col s4\">\r\n                <input id=\"city\" type=\"text\" className=\"validate\" \r\n                    placeholder=\"Enter city\" value={value} \r\n                    onChange={e => setValue(e.target.value)} \r\n                    onKeyDown={handleKey} />\r\n            </div>\r\n            <div style={{ marginLeft: '0' }} className=\"col s2\">\r\n                <button className=\"btn waves-effect waves-light light-blue darken-3\" \r\n                    type=\"submit\" name=\"action\" onClick={() => requestWeather(value, setValue)}>Add city\r\n                    <i className=\"material-icons right\">send</i>\r\n                </button>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Search\r\n","import { Link } from 'react-router-dom'\r\n\r\nconst Card = ({ cityOne, deleteCity }) => {\r\n    const {temperature: temp, wind, description: desc, city} = cityOne\r\n    return (\r\n        <ul className=\"collection with-header\" data-city={city}>\r\n            <li className=\"collection-header\"><Link to={`/weather-task/${city}`}>{city}</Link>\r\n                <span className=\"remove-card\" onClick={() => deleteCity(city)}><i className=\"material-icons\">close</i></span>\r\n            </li>\r\n            <li className=\"collection-item\">Temperature: {temp}</li>\r\n            <li className=\"collection-item\">Wind: {wind}</li>\r\n            <li className=\"collection-item\">Description: {desc}</li>\r\n        </ul>\r\n    )\r\n}\r\n\r\nexport default Card\r\n","import Card from './Card'\r\n\r\nconst Cards = ({ cities = [], deleteCity }) => {\r\n    return (\r\n        <div className=\"cards-weather\">\r\n            {cities.map((city, ind) => <Card key={ind + Date.now()} cityOne={city} deleteCity={deleteCity} /> )}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Cards\r\n","const Preloader = () => {\r\n    return (\r\n        <div style={{ display: 'block', margin: '15px auto 100px auto' }} className=\"preloader-wrapper big active\">\r\n            <div className=\"spinner-layer spinner-blue-only\">\r\n                <div className=\"circle-clipper left\">\r\n                    <div className=\"circle\"></div>\r\n                </div><div className=\"gap-patch\">\r\n                    <div className=\"circle\"></div>\r\n                </div><div className=\"circle-clipper right\">\r\n                    <div className=\"circle\"></div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Preloader\r\n","import './App.css'\nimport React, { useState, useEffect } from 'react'\nimport Search from './Components/Search'\nimport Cards from './Components/Cards'\nimport Preloader from './Components/Preloader'\n\nfunction App() {\n  const [cities, setCities] = useState([])\n  const [loading, setLoading] = useState(false)\n\n const searchCity = (city, setValue) => {\n   const ls = JSON.parse(localStorage.getItem('cityNames')) ? JSON.parse(localStorage.getItem('cityNames')) : []\n   city = city[0].toUpperCase() + city.slice(1).toLowerCase()\n   setLoading(true)\n    fetch(`https://weather-restful.herokuapp.com/weather/${city}`)\n      .then(response => response.ok ? response.json() : Promise.reject(response))\n      .then(data => {\n        if (ls.length && ls.includes(city)) {\n          return alert('Данный город уже есть в списке')\n        }\n        const newObject = { city, ...data }\n        setCities(prevCities => {\n          const newCities = [...prevCities, newObject]\n          return newCities\n        })\n        updateLS(newObject, 'cities')\n        updateLS(city, 'cityNames')\n        setLoading(false)\n        setValue('')\n      })\n      .catch(error => {\n        setLoading(false)\n        return alert(`Возникла ошибка: ${error.status}, текст ошибки: ${error.statusText}`)\n      })\n  }\n\n  const updateLS = (cities, name) => {\n    const ls = JSON.parse(localStorage.getItem(name)) ? JSON.parse(localStorage.getItem(name)) : []\n    const citiesForLS = ls.length \n      ? [...ls, cities]\n      : [cities]\n    localStorage.setItem(name, JSON.stringify(citiesForLS))\n  }\n\n  const deleteCity = city => {\n    document.querySelector(`.collection[data-city=\"${city}\"`).classList.add('hideAnimation')\n    setTimeout(() => {\n      setCities(cities.filter(c => c.city !== city))\n      const citiesLs = JSON.parse(localStorage.getItem('cities'))\n      const newCitiesLs = citiesLs.filter(c => c.city !== city)\n      localStorage.setItem('cities', JSON.stringify(newCitiesLs))\n      const cityNamesLs = JSON.parse(localStorage.getItem('cityNames'))\n      const newCityNamesLs = cityNamesLs.filter(c => c !== city)\n      localStorage.setItem('cityNames', JSON.stringify(newCityNamesLs))\n    }, 230);\n  }\n\n  async function getOneCity(city) {\n    const request = await fetch(`https://weather-restful.herokuapp.com/weather/${city}`)\n    const response = await request.json()\n    return response\n  }\n\n\n  useEffect(() => {\n    async function fetchAllCities(cities) {\n      const arr = []\n      for (let item of cities) {\n        const city = await getOneCity(item)\n        const changedObj = { city: item, ...city }\n        arr.push(changedObj)\n      }\n      return arr\n    }\n    async function fetchData() {\n      const ls = JSON.parse(localStorage.getItem('cities')) ? JSON.parse(localStorage.getItem('cities')) : []\n      const names = JSON.parse(localStorage.getItem('cityNames'))\n      if (ls.length) {\n        setCities(ls)\n        const updateCities = await fetchAllCities(names)\n        localStorage.setItem('cities', JSON.stringify(updateCities))\n        if (window.location.pathname === '/') {\n          setCities(updateCities)\n        }\n      }\n    }\n    fetchData()\n  }, [])\n\n  return (\n    <div className=\"App container\">\n      <div className=\"header\">\n        <h1>React Weather App</h1>\n        <a href=\"https://github.com/Ksooft\" target=\"_blank\" rel=\"noopener noreferrer\" className=\"github\">\n          <i className=\"fab fa-github\"></i>\n        </a>\n      </div>\n      <Search requestWeather={searchCity} />\n      <Cards cities={cities} deleteCity={deleteCity} loading={loading} />\n      {loading ? <Preloader /> : ''}\n    </div>\n  );\n}\n\nexport default App;\n","const Forecast = ({ day, month, temp, wind }) => {\r\n    const addDays = days => {\r\n        let date = new Date(),\r\n            inDays = new Date()\r\n        inDays.setDate(date.getDate() + days)\r\n        return inDays.getDate()\r\n    }\r\n    return (\r\n        <>\r\n            <p style={{ marginLeft: '10px', fontSize: '17px', textAlign: 'left' }}>{addDays(day)} {month}:</p>\r\n            <ul className=\"detail-info\">\r\n                <li><span>Temperature:</span> {temp}</li>\r\n                <li><span>Wind:</span> {wind}</li>\r\n            </ul>    \r\n        </>\r\n    )\r\n}\r\n\r\nexport default Forecast\r\n","import Forecast from './Forecast'\r\n\r\nconst DetailCardContent = ({ day, month, infoCity, nameCity }) => {\r\n    return (\r\n        <div className=\"row\">\r\n            <div className=\"col s12 m12\">\r\n                <div className=\"card\">\r\n                    <div className=\"card-content\">\r\n                        <span style={{ fontWeight: 500 }} className=\"card-title left-align\">{nameCity}</span>\r\n                        <p style={{ marginLeft: '10px', fontSize: '17px', textAlign: 'left' }}>Today ({day} {month}):</p>\r\n                        <ul className=\"detail-info\">\r\n                            <li><span>Temperature:</span> {infoCity.temperature}</li>\r\n                            <li><span>Wind:</span> {infoCity.wind}</li>\r\n                            <li><span>Description:</span> {infoCity.description}</li>\r\n                        </ul>\r\n                        {infoCity.forecast.map((c, ind) => <Forecast key={ind} day={+c.day} month={month} temp={c.temperature} wind={c.wind} />)}\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default DetailCardContent","import React, { useState, useEffect } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport DetailCardContent from './DetailCardContent'\r\nimport Preloader from './Preloader'\r\n\r\nconst DetailCard = ({ check }) => {\r\n    const [infoCity, setInfoCity] = useState({})\r\n    const [loading, setLoading] = useState(true)\r\n    const propsCity = check.match.params.city\r\n    const namesFromLs = JSON.parse(localStorage.getItem('cityNames')) ? JSON.parse(localStorage.getItem('cityNames')) : []\r\n    const isThere = namesFromLs.includes(propsCity)\r\n    const getOneCity = (city) => {\r\n        setLoading(true)\r\n        fetch(`https://weather-restful.herokuapp.com/weather/${city}`)\r\n            .then(response => response.json())\r\n            .then(data => {\r\n                setInfoCity(data)\r\n                setLoading(false)\r\n            })\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (isThere) {\r\n            getOneCity(propsCity)\r\n        }\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, [])\r\n\r\n    if (isThere) {\r\n        const day = new Date().getDate()\r\n        const month = new Date().toLocaleString('en', { month: 'long' })\r\n        return (\r\n            <div className=\"container detail App\">\r\n                <Link to=\"/weather-task\" className=\"detail-back\"><i className=\"material-icons\">arrow_back</i></Link>\r\n                <h1 style={{ textAlign: 'center' }}>React Weather App</h1>\r\n                {loading ? <Preloader />\r\n                    : <DetailCardContent day={day} month={month} infoCity={infoCity} nameCity={propsCity} />}\r\n            </div>\r\n        )\r\n    }\r\n    return (\r\n        <div className=\"notfound\">\r\n            <Link to=\"/weather-task\" className=\"detail-back\"><i className=\"material-icons\">arrow_back</i></Link>\r\n            <h2 className=\"center-align red-text\">There is not found page!</h2>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default DetailCard\r\n","import { BrowserRouter, Route, Switch } from 'react-router-dom'\r\nimport App from '../App'\r\nimport DetailCard from './DetailCard'\r\n\r\nconst Router = () => {\r\n\r\n    return (\r\n        <BrowserRouter>\r\n            <Switch>\r\n                <Route exact path='/weather-task' component={App} />\r\n                <Route path='/weather-task/:city' render={props => <DetailCard {...props} check={props} />} />\r\n            </Switch>\r\n        </BrowserRouter>\r\n    )\r\n}\r\n\r\nexport default Router\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport Router from './Components/Router';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Router />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n"],"sourceRoot":""}